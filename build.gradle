plugins {
    id 'java-library'
    id 'maven-publish'
}

version = '1.0.0-alpha.4'
group = 'com.github.giulioscattolin'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'com.google.truth:truth:1.1.3'
    testImplementation 'junit:junit:4.13.2'
}

publishing {
    publications {
        library(MavenPublication) {
            from components.java
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
    options {
        source = '8'
        links 'https://docs.oracle.com/javase/8/docs/api/'
    }
}

sourceSets {
    demo {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    demoImplementation.extendsFrom implementation
    demoRuntimeOnly.extendsFrom runtimeOnly
}

tasks.register('compileSmc') {
    doLast {
        projectDir.eachFileRecurse {file ->
            if (file.name.endsWith('.sm')) {
                exec {
                    commandLine = [
                            "java",
                            "-jar",
                            "smc.jar",
                            "-l", "Java",
                            "-o", 'src/main/java/com/github/giulioscattolin/rinex',
                            "-f", "package:com.github.giulioscattolin.rinex",
                            file.absolutePath
                    ]
                }
            }
        }
    }
}

task(analyzeRinexFile, dependsOn: 'classes', type: JavaExec) {
    main = 'com.github.giulioscattolin.rinex.demo.AnalyzeRinexFileDemo'
    classpath = sourceSets.demo.runtimeClasspath
}